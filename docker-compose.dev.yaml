version: '3.9'

services:
  directus:
      image: directus/directus:latest
      container_name: directus_app
      environment:
        PUBLIC_URL: ${DIRECTUS_PUBLIC_URL}
        KEY: ${DIRECTUS_KEY}
        SECRET: ${DIRECTUS_SECRET}
        DB_CLIENT: pg
        DB_HOST: ${POSTGRES_HOST}
        DB_PORT: ${POSTGRES_PORT}
        DB_DATABASE: ${POSTGRES_DB}
        DB_USER: ${POSTGRES_USER}
        DB_PASSWORD: ${POSTGRES_PASSWORD}
        ADMIN_EMAIL: ${DIRECTUS_ADMIN_EMAIL}
        ADMIN_PASSWORD: ${DIRECTUS_ADMIN_PASSWORD}
        CONTENT_SECURITY_POLICY_DIRECTIVES__FRAME_ANCESTORS: "array:http://localhost:3000 http://localhost:8055,self"
        CORS_ENABLED: 'true'
        CORS_ORIGIN: '*'
        STORAGE_AZURE_ACCOUNT_KEY: ${STORAGE_AZURE_ACCOUNT_KEY}
        STORAGE_AZURE_ACCOUNT_NAME: ${STORAGE_AZURE_ACCOUNT_NAME}
        STORAGE_AZURE_CONTAINER_NAME: ${STORAGE_AZURE_CONTAINER_NAME}
        STORAGE_AZURE_DRIVER: ${STORAGE_AZURE_DRIVER}
        STORAGE_AZURE_ENDPOINT: ${STORAGE_AZURE_ENDPOINT}
        STORAGE_LOCATIONS: ${STORAGE_LOCATIONS}
      ports:
        - "8055:8055"
      restart: unless-stopped
      networks:
        - directus_network
      labels:
        - "com.example.service=Directus Service"
      
  nuxt:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: nuxt_app
    # environment:
    #   API_URL: ${API_URL}
    #   DIRECTUS_URL: ${DIRECTUS_URL}
    volumes:
      - .:/app
    ports:
      - "3000:3000"
      - "24678:24678"
    restart: unless-stopped
    networks:
      - directus_network
    depends_on:
      - directus
    labels:
      - "com.example.service=Nuxt App Service"

networks:
  directus_network:
    driver: bridge
